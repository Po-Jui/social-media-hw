{"remainingRequest":"C:\\Users\\itea5\\30days-challange\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\itea5\\30days-challange\\src\\components\\blogPost.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\itea5\\30days-challange\\src\\components\\blogPost.vue","mtime":1688746802949},{"path":"C:\\Users\\itea5\\30days-challange\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\itea5\\30days-challange\\node_modules\\babel-loader\\lib\\index.js","mtime":456789000000},{"path":"C:\\Users\\itea5\\30days-challange\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\itea5\\30days-challange\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgc2VhcmNoTWl4aW4gZnJvbSAiLi4vbWl4aW5zL3NlYXJjaE1peGluIjsNCmltcG9ydCB7IGRiIH0gZnJvbSAiQC9jb25maWcvZmlyZWJhc2VDb25maWcuanMiOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGJsb2dzOiBbXSwNCiAgICAgIHNlYXJjaDogIiIsDQogICAgfTsNCiAgfSwNCiAgbW91bnRlZCgpIHsNCiAgICB0aGlzLmdldEJsb2dzKCk7DQogIH0sDQogIG1ldGhvZHM6IHsNCiAgICBhc3luYyBnZXRCbG9ncygpIHsNCiAgICAgIGxldCBkYkJsb2dzID0gYXdhaXQgZGIuY29sbGVjdGlvbigiYmxvZ3MiKS5nZXQoKTsNCiAgICAgIGNvbnN0IGJsb2dzID0gW107DQogICAgICBkYkJsb2dzLmZvckVhY2goKGRvYykgPT4gew0KICAgICAgICBsZXQgYXBwRGF0YSA9IGRvYy5kYXRhKCk7DQogICAgICAgIGFwcERhdGEuaWQgPSBkb2MuaWQ7DQogICAgICAgIGJsb2dzLnB1c2goew0KICAgICAgICAgIGlkOiBhcHBEYXRhLmlkLA0KICAgICAgICAgIHRpdGxlOiBhcHBEYXRhLnRpdGxlLA0KICAgICAgICAgIGNvbnRlbnQ6IGFwcERhdGEuY29udGVudCwNCiAgICAgICAgICBhdXRob3I6IGFwcERhdGEuYXV0aG9yLA0KICAgICAgICAgIGhhc2hUYWdzOiBhcHBEYXRhLmhhc2hUYWdzLA0KICAgICAgICB9KTsNCiAgICAgIH0pOw0KICAgICAgdGhpcy5ibG9ncyA9IGJsb2dzOw0KICAgICAgLy8gY29uc29sZS5sb2codGhpcy5ibG9ncyk7DQogICAgfSwNCiAgfSwNCiAgbWl4aW5zOiBbc2VhcmNoTWl4aW5dLA0KfTsNCg=="},{"version":3,"sources":["blogPost.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"blogPost.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <b-container>\r\n      <b-col class=\"m-5 text-center\">\r\n        <h2>These are my blogs</h2>\r\n      </b-col>\r\n      <b-row align-h=\"center\" class=\"m-5\">\r\n        <b-form-input\r\n          v-model=\"search\"\r\n          placeholder=\"Search Blogs\"\r\n        ></b-form-input>\r\n      </b-row>\r\n      <b-row align-h=\"center\" class=\"m-3\">\r\n        <b-card\r\n          v-for=\"blog in filteredBlogs\"\r\n          :key=\"blog.id\"\r\n          :title=\"blog.title\"\r\n          img-src=\"https://picsum.photos/600/300/?image=25\"\r\n          img-alt=\"Image\"\r\n          img-top\r\n          tag=\"article\"\r\n          style=\"max-width: 20rem;\"\r\n          class=\"m-3\"\r\n        >\r\n          <b-card-text>\r\n            Content: {{ blog.content }}\r\n          </b-card-text>\r\n           <b-card-text>\r\n            Author: {{blog.author}}\r\n          </b-card-text>\r\n           <b-card-text>\r\n             HashTags:\r\n            <ul>\r\n              <li v-for=\"hashtag in blog.hashTags\" :key=\"hashtag.id\"> # {{ hashtag }}</li>\r\n            </ul>\r\n          </b-card-text>\r\n\r\n          <b-button href=\"#\" variant=\"primary\">See More</b-button>\r\n        </b-card>\r\n      </b-row>\r\n    </b-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport searchMixin from \"../mixins/searchMixin\";\r\nimport { db } from \"@/config/firebaseConfig.js\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      blogs: [],\r\n      search: \"\",\r\n    };\r\n  },\r\n  mounted() {\r\n    this.getBlogs();\r\n  },\r\n  methods: {\r\n    async getBlogs() {\r\n      let dbBlogs = await db.collection(\"blogs\").get();\r\n      const blogs = [];\r\n      dbBlogs.forEach((doc) => {\r\n        let appData = doc.data();\r\n        appData.id = doc.id;\r\n        blogs.push({\r\n          id: appData.id,\r\n          title: appData.title,\r\n          content: appData.content,\r\n          author: appData.author,\r\n          hashTags: appData.hashTags,\r\n        });\r\n      });\r\n      this.blogs = blogs;\r\n      // console.log(this.blogs);\r\n    },\r\n  },\r\n  mixins: [searchMixin],\r\n};\r\n</script>\r\n"]}]}